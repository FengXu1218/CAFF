usethis::use_gpl3_license()
usethis::use_readme_rmd()
library(edgeR)
library(ggplot2)
library(patchwork)
library(tidyverse)
library(pracma)
library(CAFF)
library(data.table)
dir <- "./DataSets/GSE129447_Hela1/"
Hela1 <- read.table(paste0(dir, "rawdata/GSM3713084_HeLa_1.txt"), header = T, row.names = 1)
usethis::use_data("Hela1")
usethis::use_data(Hela1)
# Check the sequencing depth distribution:
quantile(colSums(Hela1), probs = c(0,0.1, 0.25,0.5,0.75,0.9, 1))
# Cells with sequencing depth less than 10000 were removed:
colids <- which(colSums(Hela1) > 10000)
# Genes with 0 expression in more than 70% of all cells were removed:
rowids <- which(apply(Hela1, 1, function(x) length(which(x == 0))/length(x) <= 0.7))
exp <- Hela1[rowids, colids]
# cpm transformationï¼š
exp_cpm <- cpm(exp, log = T) %>% round(2)
exp_cpm_nolog <- cpm(exp, log = F) %>% round(2)
usethis::use_data(exp, exp_cpm, exp_cpm_nolog)
usethis::use_data(data_cc, data_cc_new)
# extracte the expression matrix of cell cycle related genes:
load("cc_genes/cc_genes.Rdata")
# extracte the expression matrix of cell cycle related genes:
load("cc_genes/cc_genes.Rdata")
?usethis::use_data
# extracte the expression matrix of cell cycle related genes:
load("cc_gene/cc_genes.Rdata")
# extracte the expression matrix of cell cycle related genes:
load("cc_genes/cc_genes.Rdata")
devtools::document()
usethis::use_package("ggplot2")
usethis::use_package("patchwork")
usethis::use_package("pracma")
usethis::use_package("pheatmap")
devtools::document()
devtools::load_all(".")
library("knitr")
knit2html("README.Rmd")
library("knitr")
knit2html("README.Rmd")
library("knitr")
knit2html("README.Rmd")
## build_pseudo_order --------------------------------
data(data_cc_new)
usethis::use_data(data_cc, data_cc_new)
## build_pseudo_order --------------------------------
data(data_cc_new)
## Our method ==============
pseudo_order_list <- build_pseudo_order(data_cc_new, method = "Default")
pseudo_order <- pseudo_order_list$pseudo_order
pseudo_order_rank <- pseudo_order_list$pseudo_order_rank
## tricycle method ==============
tricycle_order_rank <- build_pseudo_order(data_cc_new, method = "tricycle")
## reCAT method ==============
data_cc_cyclebase <- exp_cpm[intersect(cyclebase3.0_genes, rownames(exp_cpm)),
intersect(colnames(data_cc_new), colnames(exp_cpm))]
dim(data_cc_cyclebase)
reCAT_order <- build_pseudo_order(data_cc_cyclebase, method = "reCAT")
devtools::load_all(".")
reCAT_order <- build_pseudo_order(data_cc_cyclebase, method = "reCAT")
reCAT_order_rank <- reCAT_order[[2]]
## Comparison above the three groups ==============
rank_data <- data.frame(pseudo_order_rank = pseudo_order_rank,
tricycle_order_rank = tricycle_order_rank,
reCAT_order_rank = reCAT_order_rank)
rank_data <- rank_data[order(rank_data$pseudo_order_rank),]
usethis::use_data(rank_data, pseudo_order, data_cc_ordered)
data_cc_ordered <- data_cc_new[, pseudo_order]
usethis::use_data(rank_data, pseudo_order, data_cc_ordered)
usethis::use_data(rank_data, pseudo_order, data_cc_ordered, overwrite = T)
library("knitr")
knit2html("README.Rmd")
devtools::load_all(".")
library("knitr")
knit2html("README.Rmd")
library("knitr")
knit2html("README.Rmd")
usethis::use_package("evaluate")
devtools::load_all(".")
devtools::document()
devtools::load_all(".")
library("knitr")
knit2html("README.Rmd")
devtools::load_all(".")
library("knitr")
knit2html("README.Rmd")
devtools::load_all(".")
library("knitr")
knit2html("README.Rmd")
devtools::document()
library("knitr")
knit2html("README.Rmd")
p_list <- cor_scatter_plot(rank_data)
View(rank_data)
devtools::load_all(".")
View(reCAT_order)
reCAT_order <- build_pseudo_order(data_cc_cyclebase, method = "reCAT")
reCAT_order_rank <- reCAT_order[[2]]
library("knitr")
knit2html("README.Rmd")
